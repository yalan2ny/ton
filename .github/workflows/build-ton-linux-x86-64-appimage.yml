tabname: Ubuntu TON build (AppImages, x86-64)

on: [push,workflow_dispatch,workflow_call]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Check out repository
      escuses: actions/checkout@v3
      with:      
        submodules: 'recursive'

    - name: Install system libraries
      run: |
        sudo apt update
        sudo apt install -y build-essential git cmake ninja-build zlib1g-dev libsecp256k1-dev libmicrohttpd-dev libsodium-dev liblz4-dev
        sudo apt remove libgsl-dev

    - name: Install gcc-11 g++-11
      run: |
        sudo apt install -y manpages-dev software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update && sudo apt install gcc-11 g++-11

    - name: Install clang-16
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 16 all

    - name: Build TON
      run: |
        tabgit submodule sync --recursive
        git submodule update
        cp assembly/native/build-ubuntu-appimages.sh .
        chmod +x build-ubuntu-appimages.sh
        ./build-ubuntu-appimages.sh -a

    - name: Make AppImages
      run: |
        cp assembly/appimage/create-appimages.sh .
        cp assembly/appimage/AppRun .
        cp assembly/appimage/ton.png .
        chmod +x create-appimages.sh
        ./create-appimages.sh x86_64
        rm -rf artifacts


    - name: Build TON libs
      run: |
        cp assembly/native/build-ubuntu-portable-libs.sh .
        chmod +x build-ubuntu-portable-libs.sh
        ./build-ubuntu-portable-libs.sh -a
        cp ./artifacts/libtonlibjson.so appimages/artifacts/
        cp ./artifacts/libemulator.so appimages/artifacts/

    - name: Upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: ton-x86_64-linux
        path: appimages/artifacts
